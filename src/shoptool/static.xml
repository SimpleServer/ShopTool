<!-- Required static additions: put in your <config> in the SimpleServer config.xml -->
    <command name="balance" allow="1+" event="storeCreditsCmd"/>
    <command name="buy" allow="1+" event="storeBuy"/>

    <event name="onServerStart">
        sleep 3000
        launch storeBotsRestartService
    </event>

    <event name="storeBotsInit">
        print "Initializing store bots..."

        set '#i 0
        while #i $store_areas Asize lt
          set '#area $store_areas #i Aget
          set '#botname $store_areaBots #area Hget
          set '#x '#y '#z to $store_botCoords #botname Hget Aexplode

          npc #botname storeBot #x #y #z

          inc '#i
        endwhile
    </event>
    <event name="storeBotsRestartService">
        run storeBotsInit

        while true
          sleep 360000
          broadcast #GRAY "Please stop NPC transactions! Bots restarting in 5 seconds!" .
          sleep 5000
          run storeBotsShutdown
          sleep 3000
          run storeBotsInit
        endwhile
    </event>
    <event name="storeBotsShutdown">
        print "Shutting down store bots..."

        set '#i 0
        while #i $store_areas Asize lt
          set '#area $store_areas #i Aget
          set '#botname $store_areaBots #area Hget

          npckill #botname

          inc '#i
        endwhile
    </event>

    <event name="storeArea">
        set '#trigger '#name to #POP Aexplode

        if #trigger "enter" eq
          say #PLAYER #BLUE "Welcome to" . #CYAN .. #name . #BLUE . "!" .
          say #PLAYER #GRAY "Buy items with the /buy command" .
          say #PLAYER #GRAY "Sell items by throwing them on the NPC" .
          say #PLAYER #GRAY "(wait for NPC to pickup before throwing more)" .
        else
          say #PLAYER #BLUE "Thank you for your visit!" .
        endif
    </event>

    <event name="storeBot">
      set '#botname '#trigger '#rest to #POP Aexplode

      if #trigger "collect" eq
        if #PLAYER null eq
          return
        endif

        set '#id #rest 0 Aget
        set '#cnt #rest 1 Aget
        set '#dat #rest 2 Aget

        if #dat int 0 eq not
          set '#id #id ":" . #dat .
        endif
        
        set '#i 0
        while #i $store_areas Asize lt
          set '#area $store_areas #i Aget
          if #PLAYER #area isinarea
            break
          endif

          set '#area null
          inc '#i
        endwhile

        if #area null eq
          return
        endif

        say #PLAYER #GRAY "Picked up" . #cnt .. "of" .. #id getitemalias .. "!" .

        run storeUpdateStock #area

        set '#selllist $store_listSell #area Hget
        set '#stockconf $store_stockConf #area Hget        
        set '#stocklist $store_listStock #area Hget
        set '#keys #selllist Hkeys

        if #keys #id Acontains not
          say #PLAYER #RED "This shop does not buy this item!" .
          push #id ":" . #dat .
          execcmd #PLAYER give #POP #cnt
          return
        endif

        set '#refill '#max '#interval to #stockconf #id Hget Aexplode
        set '#hypo #stocklist #id Hget #cnt +
        if #hypo #max gt
          say #PLAYER #RED "This shop can not buy so much now! Come back later!" .
          push #id ":" . #dat .
          execcmd #PLAYER give #POP #cnt
          return
        endif

        set '#playerbalance $store_playerBalances #PLAYER Hget
        set '#pricesum #selllist #id Hget #cnt *
        
        set '#stocklist #stocklist #id #hypo Hput
        set '#playerbalance #playerbalance #pricesum +

        set '$store_playerBalances $store_playerBalances #PLAYER #playerbalance Hput
        set '$store_listStock $store_listStock #area #stocklist Hput

        execcmd #PLAYER balance
        return
      endif
    </event>
    <event name="storeBuy">
        set '#item '#count '#rest to #POP Aexplode

        set '#i 0
        while #i $store_areas Asize lt
          set '#area $store_areas #i Aget
          if #PLAYER #area isinarea
            break
          endif

          set '#area null
          inc '#i
        endwhile

        if #area null eq
          say #PLAYER #RED "Go to a store!" .
          return
        endif

        run storeUpdateStock #area

        set '#buylist $store_listBuy #area Hget
        set '#selllist $store_listSell #area Hget
        set '#stocklist $store_listStock #area Hget
        set '#stockconf $store_stockConf #area Hget
        set '#keys #buylist Hkeys

        if #count null eq
          set '#count 1
        endif

        if #item null eq
          say #PLAYER #GRAY "Usage:" .
          say #PLAYER #GRAY "/buy list" .
          say #PLAYER #GRAY "/buy selllist" .
          say #PLAYER #GRAY "/buy ITEM [count]" .
          return
        endif

        if #item "list" eq #item "selllist" eq or
          if #item "list" eq
            set '#buy 1
            set '#iterator #keys
          else
            set '#buy 0
            set '#iterator #selllist Hkeys
          endif

          if #buy
            say #PLAYER #GRAY "Buy price list:" .
          else
            say #PLAYER #GRAY "Sell price list:" .
          endif

          set '#i 0
          while #i #iterator Asize lt
            set '#key #iterator #i Aget
            if #buy
              set '#price #buylist #key Hget
            else
              set '#price #selllist #key Hget
            endif
            set '#onstock #stocklist #key Hget
            set '#refill '#max '#interval to #stockconf #key Hget Aexplode
            
            set '#CLR #YELLOW
            if #onstock #max eq
              set '#CLR #GREEN
            endif
            if #onstock 0 eq
              set '#CLR #RED
            endif

            say #PLAYER #CLR #key getitemalias . #GRAY . "(" .. #WHITE . #onstock . #GRAY . '/ . #max . ")" . " : " . #WHITE . #price . "Credits" ..

            inc '#i
          endwhile
          execcmd #PLAYER balance
          return
        endif

        if #item int 0 eq
          set '#item #item getitemid
          if #item null eq
            say #PLAYER #RED "Could not find an item with this name!" .
            return
          endif
        endif

        if #keys #item Acontains not
          say #PLAYER #RED "This shop does not sell this item!" .
          return
        endif

        if #count #stocklist #item Hget gt
          say #PLAYER #RED "This shop does not have as much as you want! Come back later!" .
          return
        endif

        set '#playerbalance $store_playerBalances #PLAYER Hget
        set '#pricesum #buylist #item Hget #count *

        if #playerbalance #pricesum lt
          say #PLAYER #RED "You have not enough Credits!" .
          return
        endif 

        set '#stocklist #stocklist #item #stocklist #item Hget #count - Hput
        set '#playerbalance #playerbalance #pricesum -

        set '$store_playerBalances $store_playerBalances #PLAYER #playerbalance Hput
        set '$store_listStock $store_listStock #area #stocklist Hput

        execcmd #PLAYER give #item #count
        execcmd #PLAYER balance
    </event>
    <event name="storeCreditsCmd">
        set '#arg '#dest '#val '#rest to #POP Aexplode

        if $store_playerBalances #PLAYER Hcontainskey not
          set '$store_playerBalances $store_playerBalances #PLAYER 0 Hput
        endif

        if #arg null eq
          say #PLAYER #GRAY "Your current balance is:" . #WHITE . $store_playerBalances #PLAYER Hget .. "Credits" ..
          return
        endif

        if #arg "transfer" eq not
          say #PLAYER #GRAY "Usage:" .
          say #PLAYER #GRAY "/balance" .
          say #PLAYER #GRAY "/balance transfer PLAYER VALUE" .
          return
        endif

        if getplayers #dest Acontains not
          say #PLAYER #RED "Player not online!" .
          return
        endif
        
        if $store_playerBalances #dest Hcontainskey not
          set '$store_playerBalances $store_playerBalances #dest 0 Hput
        endif
        
        if #val 0 gt not
          say #PLAYER #RED "Invalid amount!" .
          return
        endif

        if #val $store_playerBalances #PLAYER Hget gt
          say #PLAYER #RED "You have not enough Credits!" .
          return
        endif
        
        set '#newsrc '#newdest to $store_playerBalances #PLAYER Hget $store_playerBalances #dest Hget
        set '#newsrc #newsrc #val -
        set '#newdest #newdest #val +
        set '$store_playerBalance $store_playerBalance #PLAYER #newsrc Hput #dest #newdest Hput

        say #PLAYER #GREEN #val . "Credits transferred to" .. #dest ..
        say #dest #GREEN #val . "Credits received from" .. #PLAYER ..
    </event>
    <event name="storeUpdateStock">
        set '#area #POP Aexplode

        set '#stockconf $store_stockConf #area Hget
        set '#stocklist $store_listStock #area Hget

        set '#timepassed currtime $store_lastVisit #area Hget -
        set '$store_lastVisit $store_lastVisit #area currtime Hput

        set '#keys #stocklist Hkeys
        set '#i 0
        while #i #keys Asize lt
          set '#key #keys #i Aget
          set '#onstock #stocklist #key Hget
          set '#refill '#max '#interval to #stockconf #key Hget Aexplode

          if #onstock #refill eq
            inc '#i
            continue
          endif

          set '#supply #timepassed #interval /
          set '#required #refill #onstock -
          if #required 0 gt
            if #supply #required gt
              set '#onstock #onstock #required +
            else
              set '#onstock #onstock #supply +
            endif
          else
            if #supply #required -1 * gt
              set '#onstock #onstock #required +
            else
              set '#onstock #onstock #supply -1 * +
            endif
          endif
          set '#stocklist #stocklist #key #onstock Hput
          
          inc '#i
        endwhile
        set '$store_listStock $store_listStock #area #stocklist Hput
    </event>


    <event name="store_lastVisit" value="{}" />
    <event name="store_playerBalances" value="{}" />

